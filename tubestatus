#!/usr/bin/env bash

# MIT License
#
# Copyright (c) 2020 Matthieu Petiteau
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Dependencies: jq
#
# This script fetchs the tube line statuses from the TFL API
# https://api.tfl.gov.uk and returns the results in terminal.
set -e

command -v jq >/dev/null 2>&1 || {
  printf '%s\n%s\n' \
    'Error: You need to install jq to run tubestatus.' \
    'https://stedolan.github.io/jq/download/' >&2
  exit 1
}

line_search="$1"
delimiter="¬¬¬"
url="https://api.tfl.gov.uk/line/mode/tube,overground,dlr,elizabeth-line/status"

grey=$(tput setaf 243)
red=$(tput setaf 161)
green=$(tput setaf 118)
yellow=$(tput setaf 226)
blue=$(tput setaf 39)
none=$(tput sgr0)

legend() {
  printf "Legend (service status): %s %s %s %s %s" \
    "${green} ●${none} Good" \
    "${yellow} ●${none} Slow" \
    "${red} ●${none} Issues" \
    "${grey} ●${none} Closed" \
    "${blue} ●${none} Special"
}

call() {
  curl -s ${url} |
    jq --arg delim ${delimiter} -j '.[] |
    (.name) + $delim, (
      .lineStatuses[0] | (.statusSeverity),
      $delim + (.statusSeverityDescription),
      (if .reason then $delim + (.reason | gsub("[\\n\\t]"; "")) + "\n" else "\n" end)
    )' |
    awk -F "${delimiter}" -v delim="${delimiter}" -v r="${red}" -v b="${blue}" \
      -v y="${yellow}" -v g="${green}" -v gr="${grey}" -v n="${none}" -v line="${line_search}" '{
      if ($4) reason=$4; else reason="";
      if ($2 == 10) color=g;
      else if ($2 == 20) color=gr;
      else if ($2 == 0) color=b;
      else if ($2 >= 8) color=y;
      else color=r;
      if (index(tolower($1), tolower(line)))
        print color "●" n, $1 delim $3 delim reason;
    }' |
    column -t -s ${delimiter}
}

result="$(call)"
[[ -z ${result} ]] && {
  printf 'Could not find line %s.\n' "${line_search}" >&2
  exit 1
}

printf '%s\n\n%s\n' "$(legend)" "${result}"
